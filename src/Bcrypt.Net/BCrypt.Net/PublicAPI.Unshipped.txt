BCryptNet.BCrypt
BCryptNet.BCrypt.BCrypt() -> void
BCryptNet.BcryptAuthenticationException
BCryptNet.BcryptAuthenticationException.BcryptAuthenticationException() -> void
BCryptNet.BcryptAuthenticationException.BcryptAuthenticationException(string message) -> void
BCryptNet.BcryptAuthenticationException.BcryptAuthenticationException(string message, System.Exception innerException) -> void
BCryptNet.BCryptCore
BCryptNet.BCryptCore.BCryptCore() -> void
BCryptNet.BCryptExtendedV1
BCryptNet.BCryptExtendedV1.BCryptExtendedV1() -> void
BCryptNet.BCryptExtendedV2
BCryptNet.BCryptExtendedV2.BCryptExtendedV2() -> void
BCryptNet.HashInformation
BCryptNet.HashInformation.RawHash.get -> string
BCryptNet.HashInformation.Settings.get -> string
BCryptNet.HashInformation.Version.get -> string
BCryptNet.HashInformation.WorkFactor.get -> string
BCryptNet.HashInformationException
BCryptNet.HashInformationException.HashInformationException() -> void
BCryptNet.HashInformationException.HashInformationException(string message) -> void
BCryptNet.HashInformationException.HashInformationException(string message, System.Exception innerException) -> void
BCryptNet.HashParser
BCryptNet.HashType
BCryptNet.HashType.HMAC384 = 3 -> BCryptNet.HashType
BCryptNet.HashType.HMAC512 = 4 -> BCryptNet.HashType
BCryptNet.HashType.None = -1 -> BCryptNet.HashType
BCryptNet.HashType.SHA256 = 0 -> BCryptNet.HashType
BCryptNet.HashType.SHA384 = 1 -> BCryptNet.HashType
BCryptNet.HashType.SHA512 = 2 -> BCryptNet.HashType
BCryptNet.SaltParseException
BCryptNet.SaltParseException.SaltParseException() -> void
BCryptNet.SaltParseException.SaltParseException(string message) -> void
BCryptNet.SaltParseException.SaltParseException(string message, System.Exception innerException) -> void
static BCryptNet.BCrypt.HashPassword(string inputKey, int workFactor = 11) -> string
static BCryptNet.BCrypt.HashPassword(string inputKey, string salt) -> string
static BCryptNet.BCrypt.InterrogateHash(string hash) -> BCryptNet.HashInformation
static BCryptNet.BCrypt.PasswordNeedsRehash(string hash, int newMinimumWorkLoad) -> bool
static BCryptNet.BCrypt.ValidateAndUpgradeHash(string currentKey, string currentHash, string newKey, int workFactor = 11, bool forceWorkFactor = false) -> string
static BCryptNet.BCrypt.Verify(string text, string hash) -> bool
static BCryptNet.BCryptExtendedV1.HashPassword(string inputKey, int workFactor = 11, BCryptNet.HashType hashType = BCryptNet.HashType.SHA384) -> string
static BCryptNet.BCryptExtendedV1.HashPassword(string inputKey, string salt, BCryptNet.HashType hashType = BCryptNet.HashType.SHA384) -> string
static BCryptNet.BCryptExtendedV1.ValidateAndUpgradeHash(string currentKey, string currentHash, string newKey, BCryptNet.HashType hashType = BCryptNet.HashType.SHA384, int workFactor = 11, bool forceWorkFactor = false) -> string
static BCryptNet.BCryptExtendedV1.Verify(string text, string hash, BCryptNet.HashType hashType = BCryptNet.HashType.SHA384) -> bool
static BCryptNet.BCryptExtendedV2.HashPassword(string inputKey, int workFactor = 11, BCryptNet.HashType hashType = BCryptNet.HashType.SHA384) -> string
static BCryptNet.BCryptExtendedV2.HashPassword(string inputKey, string salt, BCryptNet.HashType hashType = BCryptNet.HashType.SHA384) -> string
static BCryptNet.BCryptExtendedV2.ValidateAndUpgradeHash(string currentKey, string currentHash, BCryptNet.HashType currentKeyHashType, string newKey, BCryptNet.HashType hashType = BCryptNet.HashType.SHA384, int workFactor = 11, bool forceWorkFactor = false) -> string
static BCryptNet.BCryptExtendedV2.ValidateAndUpgradeHash(string currentKey, string currentHash, string newKey, BCryptNet.HashType hashType = BCryptNet.HashType.SHA384, int workFactor = 11, bool forceWorkFactor = false) -> string
static BCryptNet.BCryptExtendedV2.Verify(string text, string hash, BCryptNet.HashType hashType = BCryptNet.HashType.SHA384) -> bool
static BCryptNet.HashParser.GetHashInformation(string hash) -> BCryptNet.HashInformation
static BCryptNet.HashParser.GetWorkFactor(string hash) -> int